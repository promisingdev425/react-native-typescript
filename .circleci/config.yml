# yamllint disable rule:document-start rule:line-length
# https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:14.17.5-browsers
    working_directory: ~/apartment-snapshot
  node-lighthouse:
    docker:
      - image: cimg/node:15.12-browsers
    working_directory: ~/apartment-snapshot
  # speedtest:
  #   machine: true
  #   working_directory: ~/apartment-snapshot

commands:
  set_deploy_key:
    description: Sets the ssh key to allow pushing to GitHub branches
    steps:
      - add_ssh_keys:
          fingerprints:
            - '51:54:62:57:f5:e5:ab:fe:97:8d:4c:6d:13:cd:2e:33'

  # gcloud_auth:
  #   description: "Authenticate the Google Cloud SDK"
  #   parameters:
  #     keyfile:
  #       type: string
  #       default: "GCP_DEV_KEY"
  #   steps:
  #     - run:
  #         name: "Activate GCP Service Account"
  #         command: |
  #           # https://github.com/firebase/firebase-tools/issues/825
  #           # https://developers.google.com/accounts/docs/application-default-credentials
  #           echo ${<< parameters.keyfile >>} | base64 -d > ${HOME}/gcloud-service-key.json
  #           echo 'export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcloud-service-key.json"' >> $BASH_ENV

  install_dependencies:
    description: 'Install dependencies with caching.'
    parameters:
      cache_id:
        type: string
        default: v1
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            # https://circleci.com/docs/2.0/caching/#yarn-node
            - << parameters.cache_id >>-streetwise-{{ checksum "yarn.lock" }}-{{ checksum ".nvmrc" }}
            - << parameters.cache_id >>-streetwise-
      - run:
          name: 'Install Dependencies'
          command: |
            yarn install

  save_dependency_cache:
    description: 'Caching Dependencies'
    parameters:
      cache_id:
        type: string
        default: v1
    steps:
      - save_cache:
          key: << parameters.cache_id >>-streetwise-{{ checksum "yarn.lock" }}-{{ checksum ".nvmrc" }}
          paths:
            - ~/.cache/yarn
            - ~/.nvm
            - ./node_modules
            - ./app/node_modules
            - ./storybook/node_modules

  save_logs:
    description: 'Save logs.'
    steps:
      - store_artifacts:
          path: ~/.npm/_logs

jobs:
  test:
    executor: node
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'Validate the Build'
          command: yarn validate
      - save_logs
      - store_test_results:
          path: reports/coverage
      # https://circleci.com/docs/2.0/artifacts/
      - store_artifacts:
          path: reports
      - save_dependency_cache

  # deploy-dev:
  #   executor: node
  #   steps:
  #     - checkout
  #     - gcloud_auth
  #     - install_dependencies
  #     - run:
  #         name: "Build for Dev"
  #         command: yarn build-dev
  #     - run:
  #         name: "Deploy to Dev"
  #         command: yarn deploy-dev
  #     - save_logs

  deploy-storybook:
    executor: node
    steps:
      - set_deploy_key
      - run:
          name: 'Ensure Correct Node Path'
          command: npm config set scripts-prepend-node-path auto
      - checkout
      - install_dependencies
      - run: yarn deploy-storybook-ci
      - save_logs

  # deploy-prod:
  #   executor: node
  #   steps:
  #     - checkout
  #     - gcloud_auth:
  #         keyfile: "GCP_PROD_KEY"
  #     - install_dependencies
  #     - run:
  #         name: "Build for Prod"
  #         command: yarn build
  #     - run:
  #         name: "Deploy to Prod"
  #         command: yarn deploy-prod
  #     - save_logs

  lighthouse-ci:
    executor: node-lighthouse
    steps:
      - checkout
      - install_dependencies
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      # - run:
      #     name: 'test'
      #     command: ls /usr/bin && ls /usr/local/bin
      # - run:
      #     name: 'Symbolic Link chromedriver to usr/local/bin'
      #     command: sudo ln -s /Library/Frameworks/Python.framework/Versions/3.7/bin/python3 /usr/local/bin/
      - run:
          name: 'Build and Run Lighthouse'
          command: yarn workspace @apartmentsnapshot/snapshot-ui lighthouse

  # speedtest:
  #   executor: speedtest
  #   steps:
  #     - checkout
  #     - run: sudo modprobe ifb numifbs=1
  #     - run:
  #         name: '3G'
  #         command: docker run --cap-add=NET_ADMIN --shm-size=1g --rm sitespeedio/sitespeed.io:20.2.0 -c 3g --browsertime.connectivity.engine=throttle https://www.sitespeed.io/
  #     - run:
  #         name: 'No Traffic shaping'
  #         command: docker run --shm-size=1g --rm sitespeedio/sitespeed.io:20.2.0 https://www.sitespeed.io/
  #     - run:
  #         name: 'No traffic shaping with performance budget'
  #         command: docker run --shm-size=1g --rm -v "$(pwd):/sitespeed.io" sitespeedio/sitespeed.io:20.2.0 -n 3 --budget.configPath ./budgets/speedtest.json https://www.sitespeed.io/

# https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  test-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore: gh-pages
            # https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
            tags:
              only: /.*/

      # - deploy-dev:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      #         ignore: gh-pages

      # This requires paying for a Team license on GitHub
      # - deploy-storybook:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master

      # - deploy-prod:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /release\/[0-9]+(\.[0-9]+)*/

      - lighthouse-ci:
          filters:
            branches:
              ignore: gh-pages
            # https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
            tags:
              only: /.*/

      # - speedtest
